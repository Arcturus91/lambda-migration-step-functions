Comment: Video Processing Workflow
StartAt: DownloadAndExtract
States:
  DownloadAndExtract:
    Type: Task
    Resource: ${DownloadExtractFunctionArn}
    Parameters:
      fileKey.$: "$.fileKey"
      sourceBucket.$: "$.sourceBucket"
      tempPath.$: "$.tempPath"
      audioPath.$: "$.audioPath"
      audioBucket: "${AudioBucket}"
      metadata.$: "$.metadata"
    Next: TranscribeChunks
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 3
        MaxAttempts: 2
        BackoffRate: 2
    Catch:
      - ErrorEquals:
          - States.ALL
        ResultPath: "$.error"
        Next: HandleError

  TranscribeChunks:
    Type: Task
    Resource: ${TranscribeChunksFunctionArn}
    Parameters:
      fileKey.$: "$.fileKey"
      audioBucket: "${AudioBucket}"
      audioKey.$: "$.audioKey"
      outputBucket.$: "$.outputBucket"
      metadata.$: "$.metadata"
      chunkConfig.$: "$.chunkConfig"
      fileExtension.$: "$.fileExtension"
    Next: NotifySuccess
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 5
        MaxAttempts: 3
        BackoffRate: 2
    Catch:
      - ErrorEquals:
          - States.ALL
        ResultPath: "$.error"
        Next: HandleError

  NotifySuccess:
    Type: Task
    Resource: ${NotifyFunctionArn}
    Parameters:
      isError: false
      executionId.$: "$$.Execution.Id"
      fileKey.$: "$.fileKey"
      transcription.$: "$.transcription"
    End: true
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 2
        MaxAttempts: 2
        BackoffRate: 2

  HandleError:
    Type: Task
    Resource: ${NotifyFunctionArn}
    Parameters:
      isError: true
      executionId.$: "$$.Execution.Id"
      fileKey.$: "$.fileKey"
      error.$: "$.error"
    End: true
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 2
        MaxAttempts: 2
        BackoffRate: 2